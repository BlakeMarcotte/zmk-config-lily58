/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    // Combo keys are a way to combine multiple keypresses to output a different key.

    combos {
        compatible = "zmk,combos";

        combo_clear_bluetooth {
            timeout-ms = <50>; // Press all the below keys within 50ms to activate mapping
            key-positions = <52 42 0>; // Press 52=LOWER, 42=[, 0=tilde
            bindings = <&bt BT_CLR>; // activate clear bluetooth bindings for current channel
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |   `      |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  TAB     |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   =   |
            // |hCTRL tESC|  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT    |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                        | ALT  | GUI  | LOWER|  SPACE |  | BSPC  | ENTER| RAISE | CTRL  |

            bindings = <
&kp ESCAPE        &kp N1  &kp N2  &kp N3            &kp N4  &kp N5                                         &kp N6     &kp N7  &kp N8            &kp N9   &kp N0         &kp MINUS
&kp TAB           &kp Q   &kp W   &kp E             &kp R   &kp T                                          &kp Y      &kp U   &kp I             &kp O    &kp P          &kp EQUAL
&kp LEFT_CONTROL  &kp A   &kp S   &kp D             &kp F   &kp G                                          &kp H      &kp J   &kp K             &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_ALT      &kp Z   &kp X   &kp C             &kp V   &kp B           &kp DELETE       &kp QUESTION  &kp N      &kp M   &kp COMMA         &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                  &kp LEFT_COMMAND  &mo 1   &kp LEFT_SHIFT  &kp BACKSPACE    &kp SPACE     &kp ENTER  &mo 2   &kp LEFT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  F12    |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |   F7  |   F8  |  F9  |  F10  |  F11  |
            // |   `     |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |   -   |
            // |CTRL/ESC |     |     |      |      |      |                   |  <-  |   ^   |   v   |  ->  |       |       |
            // | SHIFT   |     |     |      |      |      |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans                &trans           &trans        &trans        &trans        &trans                                  &trans            &trans            &trans             &trans                &trans                 &trans
&kp TILDE             &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                             &kp CARET         &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp GRAVE             &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                  &kp NUMBER_6      &kp N7            &kp N8             &kp N9                &kp N0                 &kp COLON
&kp NON_US_BACKSLASH  &kp UNDERSCORE   &kp MINUS     &kp PLUS      &kp EQUAL     &kp LESS_THAN  &kp COMMA    &kp PERIOD  &kp GREATER_THAN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
                                                     &trans        &trans        &trans         &trans       &trans      &trans            &kp BACKSPACE     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | EXT PWR TOGGLE | BT1     | BT2    |  BT3 |  BT4  |  BT5 |                    |      |       |       |      |       |       |
            // |                |         |        |      |       |      |                    |      |       |       |      |       |   \   |
            // |   ~            |  !      |  @     |  #   |  $    |  %   |                    |  ^   |  &    |  *    |  (   |   )   |   _   |
            // | SHIFT          |  EP_ON  | EP_OFF |      |  (    |  {   |       |  |   DEL   |  }   |  )    |  +    |  {   |   }   | SHIFT |
            //                                     |      |       |      |       |  |         |      |       |       |

            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans   &trans   &trans
&bt BT_CLR_ALL  &trans        &kp PG_DN       &kp UP_ARROW      &kp PG_UP     &kp END                         &trans  &trans  &trans  &trans   &trans   &trans
&trans          &trans        &kp LEFT        &kp DOWN          &kp RIGHT     &kp HOME                        &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans          &trans        &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                              &trans            &trans        &kp SPACE     &trans    &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
